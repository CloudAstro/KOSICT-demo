apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-c.fullname" . }}
  labels:
    {{- include "app-c.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app-c.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app-c.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database | quote }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.username | quote }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.password | quote }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U {{ .Values.postgresql.username }} -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U {{ .Values.postgresql.username }} -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "app-c.fullname" . }}
      {{- end }}
